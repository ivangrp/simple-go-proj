name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: docker.io
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create Docker Hub repository if not exists
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          # Verificar si el repositorio existe
          echo "Verificando repositorio $DOCKERHUB_USERNAME/${{ env.REPO_NAME }}..."
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" -u "$DOCKERHUB_USERNAME:$DOCKERHUB_TOKEN" "https://hub.docker.com/v2/repositories/$DOCKERHUB_USERNAME/${{ env.REPO_NAME }}/")

          if [ "$STATUS" -eq 404 ]; then
            echo "Creando repositorio..."
            curl -X POST -u "$DOCKERHUB_USERNAME:$DOCKERHUB_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{"name": "${{ env.REPO_NAME }}", "is_private": false}' \
              https://hub.docker.com/v2/repositories/
            echo "✅ Repositorio creado"
          elif [ "$STATUS" -eq 200 ]; then
            echo "✅ El repositorio ya existe"
          else
            echo "❌ Error inesperado: HTTP $STATUS"
            exit 1
          fi
      
      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:${{ github.sha }}
